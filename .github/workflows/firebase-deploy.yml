name: Firebase Deploy

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION: '18.x'
  FIREBASE_PROJECT_ID: almus-todo-app

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd apps/web-app && npm ci
          cd ../../functions && npm ci

      - name: Run linting
        run: |
          npm run lint
          cd apps/web-app && npm run lint
          cd ../../functions && npm run lint

      - name: Run tests
        run: |
          npm run test
          cd apps/web-app && npm run test
          cd ../../functions && npm run test

      - name: Build applications
        run: |
          npm run build
          cd apps/web-app && npm run build

  deploy-functions:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          projectId: ${{ env.FIREBASE_PROJECT_ID }}
          channelId: live

      - name: Deploy Functions
        run: |
          cd functions
          npm ci
          npm run build
          firebase deploy --only functions --project ${{ env.FIREBASE_PROJECT_ID }}
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

  deploy-hosting:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd apps/web-app && npm ci

      - name: Build web app
        run: |
          cd apps/web-app
          npm run build
        env:
          VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
          VITE_FIREBASE_VAPID_KEY: ${{ secrets.VITE_FIREBASE_VAPID_KEY }}
          VITE_FUNCTIONS_URL: ${{ secrets.VITE_FUNCTIONS_URL }}

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          projectId: ${{ env.FIREBASE_PROJECT_ID }}
          channelId: live

  smoke-test:
    needs: [deploy-functions, deploy-hosting]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Run smoke tests
        run: |
          # Firebase Functions Health Check
          echo "Testing Firebase Functions..."
          curl -f https://${{ env.FIREBASE_PROJECT_ID }}-default-rtdb.asia-southeast1.firebasedatabase.app/.json || exit 1

          # Firebase Hosting Health Check
          echo "Testing Firebase Hosting..."
          curl -f https://${{ env.FIREBASE_PROJECT_ID }}.web.app/ || exit 1

          echo "‚úÖ Smoke tests passed!"

      - name: Notify success
        if: success()
        run: |
          echo "üéâ Deployment successful!"
          echo "Firebase Hosting: https://${{ env.FIREBASE_PROJECT_ID }}.web.app"
          echo "Firebase Functions: https://${{ env.FIREBASE_PROJECT_ID }}-default-rtdb.asia-southeast1.firebasedatabase.app"

  notify-failure:
    needs: [deploy-functions, deploy-hosting, smoke-test]
    runs-on: ubuntu-latest
    if: failure()

    steps:
      - name: Notify failure
        run: |
          echo "‚ùå Deployment failed!"
          echo "Check the logs for more details."

          # Slack ÏïåÎ¶º (ÏÑ†ÌÉùÏ†Å)
          if [ -n "${{ secrets.SLACK_WEBHOOK_URL }}" ]; then
            curl -X POST -H 'Content-type: application/json' \
              --data '{"text":"‚ùå Firebase Î∞∞Ìè¨ Ïã§Ìå®! <'${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}'|ÏÉÅÏÑ∏Î≥¥Í∏∞>"}' \
              ${{ secrets.SLACK_WEBHOOK_URL }}
          fi
